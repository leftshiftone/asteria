package one.leftshift.asteria.common.version

import one.leftshift.asteria.common.BuildProperties

/**
 * Extracts the versioning number by either reading it from a file generated by asteria-version or falling back on the specified
 * gradle version
 *
 */
final class VersionExtractor {

    private final List<VersionExtractionStrategy> activeStrategies = []

    private VersionExtractor() {}

    /**
     * Extracts a version string from a {@link one.leftshift.asteria.common.BuildProperties} by getting the first non-null result from
     * the activated strategies.
     *
     * @param properties
     * @return
     */
    String extractVersion(BuildProperties properties, String defaultValue) {
        return this.activeStrategies.findResult { it.extract(properties) } ?: defaultValue
    }

    VersionExtractor addStrategy(VersionExtractionStrategy strategy) {
        if (strategy != null) {
            this.activeStrategies.add(0, strategy)
        }
        return this
    }

    VersionExtractor addStrategies(VersionExtractionStrategy... strategies) {
        strategies.findAll { it != null }.each {
            this.activeStrategies.add(0, it)
        }
        return this
    }

    static VersionExtractor defaultExtractor() {
        final VersionExtractor extractor = new VersionExtractor()
        extractor.addStrategy(DefaultVersionExtractorStrategy.instance)
        return extractor
    }
}
